@model IEnumerable<SportShop2025.Data.Product>
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container">
    <h2>Product List</h2>
    <br />
    <search>
        <form method="get" asp-action="ListProduct" asp-controller="ManagerProducts">
            <input name="name" id="name" placeholder="Search pdqsportshop.com"/>
            <button type="submit">Search</button>
        </form>
    </search>
    <form method="get" asp-action="ListProduct" asp-controller="ManagerProducts" class="filter-form">
        <div class="form-group">
            <label for="categoryId" class="form-label">Choose category product:</label>
            <select name="categoryId" id="categoryId" class="form-select" onchange="this.form.submit()">
                <option value="">All</option>
                @foreach (var category in ViewBag.Categories)
                {
                    <option value="@category.CategoryId" selected="@(ViewBag.SelectedCategory == category.CategoryId ? "selected" : null)">
                        @category.CategoryName
                    </option>
                }
            </select>
        </div>
    </form>
    <br />
    <table value="@ViewBag.Data">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.ProductName)</th>
                <th>@Html.DisplayNameFor(model => model.Brand)</th>
                <th>@Html.DisplayNameFor(model => model.Size)</th>
                <th>@Html.DisplayNameFor(model => model.Color)</th>
                <th>@Html.DisplayNameFor(model => model.Price)</th>
                <th>@Html.DisplayNameFor(model => model.StockQuantity)</th>
                <th>@Html.DisplayNameFor(model => model.Description)</th>
                <th>@Html.DisplayNameFor(model => model.ImageUrl)</th>
                <th>@Html.DisplayNameFor(model => model.Category)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Brand)</td>
                    <td>@Html.DisplayFor(modelItem => item.Size)</td>
                    <td>@Html.DisplayFor(modelItem => item.Color)</td>
                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                    <td>@Html.DisplayFor(modelItem => item.StockQuantity)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>
                        <img src="@item.ImageUrl" />
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Category.CategoryName)</td>
                    <td>
                        <a asp-action="UpdateProduct" asp-route-ProductId="@item.ProductId" class="btn btn-edit">Edit</a>
                        <a asp-action="DetailProduct" asp-route-ProductId="@item.ProductId" class="btn btn-details">Details</a>
                        <a asp-action="DeleteProduct" asp-route-ProductId="@item.ProductId" class="btn btn-delete">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <h4>Sum product: @ViewBag.CountProductInCategory in @ViewBag.SumProduct</h4>
    <br />
    <a asp-action="CreateListProduct" class="btn-create">Create New Product</a>
    @if (@ViewBag.Data != null)
    {
        <a asp-action="ListProduct" class="btn-create"> Back To List </a>
    }

    @if (@ViewBag.SelectedCategory != null)
    {
        <a asp-action="ListProduct" class="btn-create"> Back To List </a>
    }


</div>
